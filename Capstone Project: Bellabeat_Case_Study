{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Bellabeat Case Study.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPiAxO+xoNty3d35W9mcO2S",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dchij/Google-Data-Analytics-Professional-Certificate/blob/main/Bellabeat_Case_Study.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rMk-Cc72VGxL"
      },
      "source": [
        "##**How Can a Wellness Technology Company Play It Smart?**\n",
        "###**1. Introduction**\n",
        "In this case study, I will perform many real-world tasks of a junior data analyst. I will imagine that I'm working for [Bellabeat](\"https://bellabeat.com/\"), a high-tech manufacturer of health-focused products for women, and meet different characters and team members.\n",
        "\n",
        "###**1.1 Scenario**\n",
        "I am a junior data analyst working on the marketing analyst team at Bellabeat, a high-tech manufacturer of health-focused products for women. Bellabeat is a successful small company, but they have the potential to become a larger player in the global smart device market.\n",
        "\n",
        "I have been asked to focus on one of Bellabeat’s products and analyze smart device data to gain insight into how consumers are using their smart devices. The insights I discover will then help guide marketing strategy for the company.\n",
        "\n",
        "###**1.2 Stakeholders and products**\n",
        "* Stakeholders\n",
        "  * Urška Sršen: Bellabeat’s cofounder and Chief Creative Officer\n",
        "  * Sando Mur: Mathematician and Bellabeat’s cofounder; key member of the Bellabeat executive team\n",
        "  * Bellabeat marketing analytics team: A team of data analysts responsible for collecting, analyzing, and reporting data that helps guide Bellabeat’s marketing strategy. I joined this team six months ago and have been busy learning about Bellabeat’’s mission and business goals — as well as how I, as a junior data analyst, can help Bellabeat achieve them.\n",
        "* Products\n",
        "  * Bellabeat app: The Bellabeat app provides users with health data related to their activity, sleep, stress, menstrual cycle, and mindfulness habits. This data can help users better understand their current habits and make healthy decisions. The Bellabeat app connects to their line of smart wellness products.\n",
        "  * Leaf: Bellabeat’s classic wellness tracker can be worn as a bracelet, necklace, or clip. The Leaf tracker connects to the Bellabeat app to track activity, sleep, and stress.\n",
        "  * Time: This wellness watch combines the timeless look of a classic timepiece with smart technology to track user activity, sleep, and stress. The Time watch connects to the Bellabeat app to provide you with insights into your daily wellness.\n",
        "  * Spring: This is a water bottle that tracks daily water intake using smart technology to ensure that you are appropriately hydrated throughout the day. The Spring bottle connects to the Bellabeat app to track your hydration levels.\n",
        "  * Bellabeat membership: Bellabeat also offers a subscription-based membership program for users.\n",
        "Membership gives users 24/7 access to fully personalized guidance on nutrition, activity, sleep, health and beauty, and mindfulness based on their lifestyle and goals.\n",
        "\n",
        "###**1.3 Business Task**\n",
        "Use consumer insights drawn from FitBit smart device usage data analysis to make recommendations on Bellabeat's product marketing strategy in order to drive growth in the global smart device market.\n",
        "\n",
        "\n",
        "###**1.4 Data Source**\n",
        "[FitBit Fitness Tracker Data](\"https://www.kaggle.com/arashnic/fitbit\") (CC0: Public Domain, dataset made available through [Mobius](\"https://www.kaggle.com/arashnic\"): This Kaggle data set contains personal fitness tracker from thirty fitbit users. Thirty eligible Fitbit users consented to the submission of personal tracker data, including minute-level output for physical activity, heart rate, and sleep monitoring. It includes information about daily activity, steps, and heart rate that can be used to explore users’ habits.\n",
        "\n",
        "###**1.5 Credibility of the data source** \n",
        "Here, I will determine the crediblity of the data source using ROCCC - Reliable, Original, Comprehensive, Current, Cited\n",
        "* Reliable: These datasets was made available on Kaggle through Mobius, licenced to CC0: Public Domain and were generated by respondents to a distributed survey via Amazon Mechanical Turk between 03.12.2016 to 05.12.2016. However, the datasets contains information of only about thirty FitBit users which is not representative of all FitBit users. Therefore, this is a limitation and would require more data for the analysis to be more reliable\n",
        "* Original: First published on May 31, 2016 on [Zenodo](\"https://doi.org/10.5281/zenodo.53894\") as `Crowd-sourced FitBit datasets by Furberg Robert, Brinton Julia, Keating Michael and Ortiz Alexa` \n",
        "* Comprehensive: These datasets is not comprehensive as it contains only thirty respondents\n",
        "* Current: These datasets were generated in 2016 and created by Mobius on Kaggle on 12.16.2020. It has not been updated since then, therefore the datasets are not current\n",
        "* Cited:  Mobius properly cited the source of the datasets as [here](\"https://zenodo.org/record/53894#.X9oeh3Uzaao\"). Also, at the original website, the data was properly cited"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GUndjqqnoA2Y"
      },
      "source": [
        "###**2. The datasets**\n",
        "The FitBit Fitness Tracker Data contains about 18 cvs files. First of all, I will import the python libraries that I will use in this case study, then import the csv files, do the data exploration and cleaning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XaEDkn3OYk7i"
      },
      "source": [
        "# import the libraries\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from google.colab import files\n",
        "import numpy as np"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0fiD6dY3hN9v",
        "outputId": "c3e2abcb-dad7-4a8b-ba4a-d62d15c9b4d4"
      },
      "source": [
        "# to keep the datasets stored permanently in a .zip file in google drive\n",
        "#@title uploader\n",
        "file_id = \"1CJXVkt7fKvk7t0kqzB4G165XLTowhkpE\" #@param {type:\"string\"}\n",
        "!pip install -U -q PyDrive\n",
        "\n",
        "from pydrive.auth import GoogleAuth\n",
        "from pydrive.drive import GoogleDrive\n",
        "from google.colab import auth\n",
        "from oauth2client.client import GoogleCredentials\n",
        "\n",
        "# 1. Authenticate and create the PyDrive client.\n",
        "auth.authenticate_user()\n",
        "gauth = GoogleAuth()\n",
        "gauth.credentials = GoogleCredentials.get_application_default()\n",
        "drive = GoogleDrive(gauth)\n",
        "\n",
        "# PyDrive reference:\n",
        "# https://googledrive.github.io/PyDrive/docs/build/html/index.html\n",
        "\n",
        "\n",
        "from google.colab import auth\n",
        "auth.authenticate_user()\n",
        "\n",
        "from googleapiclient.discovery import build\n",
        "drive_service = build('drive', 'v3')\n",
        "\n",
        "# Replace the assignment below with your file ID\n",
        "# to download a different file.\n",
        "#\n",
        "# A file ID looks like: 1gLBqEWEBQDYbKCDigHnUXNTkzl-OslSO\n",
        "\n",
        "import io\n",
        "from googleapiclient.http import MediaIoBaseDownload\n",
        "\n",
        "request = drive_service.files().get_media(fileId=file_id)\n",
        "downloaded = io.BytesIO()\n",
        "downloader = MediaIoBaseDownload(downloaded, request)\n",
        "done = False\n",
        "while done is False:\n",
        "  # _ is a placeholder for a progress object that we ignore.\n",
        "  # (Our file is small, so we skip reporting progress.)\n",
        "  _, done = downloader.next_chunk()\n",
        "\n",
        "fileId = drive.CreateFile({'id': file_id }) #DRIVE_FILE_ID is file id example: 1iytA1n2z4go3uVCwE_vIKouTKyIDjEq\n",
        "print(fileId['title'])  \n",
        "fileId.GetContentFile(fileId['title'])  # Save Drive file as a local file\n",
        "\n",
        "!unzip {fileId['title']}"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bellabeat.zip\n",
            "Archive:  Bellabeat.zip\n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/dailyCalories_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/dailyIntensities_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/dailySteps_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/heartrate_seconds_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteCaloriesNarrow_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteCaloriesWide_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteIntensitiesNarrow_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteIntensitiesWide_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteMETsNarrow_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteSleep_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteStepsNarrow_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/minuteStepsWide_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv  \n",
            "  inflating: Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WHIYrd2lS-sy"
      },
      "source": [
        "# reading the csv files into separate dataframes\n",
        "\n",
        "daily_activity = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv\")\n",
        "daily_calories = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/dailyCalories_merged.csv\")\n",
        "daily_intensities = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/dailyIntensities_merged.csv\")\n",
        "daily_steps = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/dailySteps_merged.csv\")\n",
        "heartrate_seconds = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/heartrate_seconds_merged.csv\")\n",
        "hourly_calories = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv\")\n",
        "hourly_intensities = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv\")\n",
        "hourly_steps = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv\")\n",
        "minute_calories_narrow = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteCaloriesNarrow_merged.csv\")\n",
        "minute_calories_wide = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteCaloriesWide_merged.csv\")\n",
        "minute_intensities_narrow = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteIntensitiesNarrow_merged.csv\")\n",
        "minute_intensities_wide = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteIntensitiesWide_merged.csv\")\n",
        "minute_mets_narrow = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteMETsNarrow_merged.csv\")\n",
        "minute_sleep = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteSleep_merged.csv\")\n",
        "minute_steps_narrow = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteStepsNarrow_merged.csv\")\n",
        "minute_steps_wide = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/minuteStepsWide_merged.csv\")\n",
        "sleep_day = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv\")\n",
        "weight_log_info = pd.read_csv(\"Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J89AeHI0582e"
      },
      "source": [
        "###**2.1 Data Exploration**\n",
        "Here, I will create a function for exploration of all the datasets imported and read into pandas above. I will check for number of rows and columns, datatypes of the columns in each dataset and finally for missing values"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YXFMzFdezt11"
      },
      "source": [
        "# create a function for data exploration of all the dataframes\n",
        "\n",
        "def exploration(df):\n",
        "  print(df.shape, '\\n')\n",
        "  print(df.dtypes, '\\n')\n",
        "  print(df.isnull().sum())\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E5OpeWrr0Ixs",
        "outputId": "362c8b2c-b38a-4069-8184-6b06dbe23ed2"
      },
      "source": [
        "# exploration of the daily_activity dataset\n",
        "exploration(daily_activity)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(940, 15) \n",
            "\n",
            "Id                            int64\n",
            "ActivityDate                 object\n",
            "TotalSteps                    int64\n",
            "TotalDistance               float64\n",
            "TrackerDistance             float64\n",
            "LoggedActivitiesDistance    float64\n",
            "VeryActiveDistance          float64\n",
            "ModeratelyActiveDistance    float64\n",
            "LightActiveDistance         float64\n",
            "SedentaryActiveDistance     float64\n",
            "VeryActiveMinutes             int64\n",
            "FairlyActiveMinutes           int64\n",
            "LightlyActiveMinutes          int64\n",
            "SedentaryMinutes              int64\n",
            "Calories                      int64\n",
            "dtype: object \n",
            "\n",
            "Id                          0\n",
            "ActivityDate                0\n",
            "TotalSteps                  0\n",
            "TotalDistance               0\n",
            "TrackerDistance             0\n",
            "LoggedActivitiesDistance    0\n",
            "VeryActiveDistance          0\n",
            "ModeratelyActiveDistance    0\n",
            "LightActiveDistance         0\n",
            "SedentaryActiveDistance     0\n",
            "VeryActiveMinutes           0\n",
            "FairlyActiveMinutes         0\n",
            "LightlyActiveMinutes        0\n",
            "SedentaryMinutes            0\n",
            "Calories                    0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "tm6Z9JVg8Rf_",
        "outputId": "11c3290c-687d-475f-aba6-c946c5ffe841"
      },
      "source": [
        "daily_activity.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityDate</th>\n",
              "      <th>TotalSteps</th>\n",
              "      <th>TotalDistance</th>\n",
              "      <th>TrackerDistance</th>\n",
              "      <th>LoggedActivitiesDistance</th>\n",
              "      <th>VeryActiveDistance</th>\n",
              "      <th>ModeratelyActiveDistance</th>\n",
              "      <th>LightActiveDistance</th>\n",
              "      <th>SedentaryActiveDistance</th>\n",
              "      <th>VeryActiveMinutes</th>\n",
              "      <th>FairlyActiveMinutes</th>\n",
              "      <th>LightlyActiveMinutes</th>\n",
              "      <th>SedentaryMinutes</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016</td>\n",
              "      <td>13162</td>\n",
              "      <td>8.50</td>\n",
              "      <td>8.50</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.88</td>\n",
              "      <td>0.55</td>\n",
              "      <td>6.06</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25</td>\n",
              "      <td>13</td>\n",
              "      <td>328</td>\n",
              "      <td>728</td>\n",
              "      <td>1985</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016</td>\n",
              "      <td>10735</td>\n",
              "      <td>6.97</td>\n",
              "      <td>6.97</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.57</td>\n",
              "      <td>0.69</td>\n",
              "      <td>4.71</td>\n",
              "      <td>0.0</td>\n",
              "      <td>21</td>\n",
              "      <td>19</td>\n",
              "      <td>217</td>\n",
              "      <td>776</td>\n",
              "      <td>1797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/14/2016</td>\n",
              "      <td>10460</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.74</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.44</td>\n",
              "      <td>0.40</td>\n",
              "      <td>3.91</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30</td>\n",
              "      <td>11</td>\n",
              "      <td>181</td>\n",
              "      <td>1218</td>\n",
              "      <td>1776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/15/2016</td>\n",
              "      <td>9762</td>\n",
              "      <td>6.28</td>\n",
              "      <td>6.28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.14</td>\n",
              "      <td>1.26</td>\n",
              "      <td>2.83</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29</td>\n",
              "      <td>34</td>\n",
              "      <td>209</td>\n",
              "      <td>726</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/16/2016</td>\n",
              "      <td>12669</td>\n",
              "      <td>8.16</td>\n",
              "      <td>8.16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.71</td>\n",
              "      <td>0.41</td>\n",
              "      <td>5.04</td>\n",
              "      <td>0.0</td>\n",
              "      <td>36</td>\n",
              "      <td>10</td>\n",
              "      <td>221</td>\n",
              "      <td>773</td>\n",
              "      <td>1863</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id ActivityDate  ...  SedentaryMinutes  Calories\n",
              "0  1503960366    4/12/2016  ...               728      1985\n",
              "1  1503960366    4/13/2016  ...               776      1797\n",
              "2  1503960366    4/14/2016  ...              1218      1776\n",
              "3  1503960366    4/15/2016  ...               726      1745\n",
              "4  1503960366    4/16/2016  ...               773      1863\n",
              "\n",
              "[5 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4wfjq3207Dlc"
      },
      "source": [
        "The `daily_activity` dataset has 940 rows and 15 columns; no missing values; Lets interpret the other datasets using same function:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b5iXNuih68z1",
        "outputId": "c7f16552-2ad5-4eda-a2b7-ed03a3d38134"
      },
      "source": [
        "# exploration of the daily_calories dataset\n",
        "exploration(daily_calories)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(940, 3) \n",
            "\n",
            "Id              int64\n",
            "ActivityDay    object\n",
            "Calories        int64\n",
            "dtype: object \n",
            "\n",
            "Id             0\n",
            "ActivityDay    0\n",
            "Calories       0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "YTh470IX78Yg",
        "outputId": "1fa6101f-6279-4acc-8ea6-1d1b75057fd2"
      },
      "source": [
        "daily_calories.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityDay</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016</td>\n",
              "      <td>1985</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016</td>\n",
              "      <td>1797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/14/2016</td>\n",
              "      <td>1776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/15/2016</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/16/2016</td>\n",
              "      <td>1863</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id ActivityDay  Calories\n",
              "0  1503960366   4/12/2016      1985\n",
              "1  1503960366   4/13/2016      1797\n",
              "2  1503960366   4/14/2016      1776\n",
              "3  1503960366   4/15/2016      1745\n",
              "4  1503960366   4/16/2016      1863"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "67XyA3I48YsB",
        "outputId": "2666e95c-f733-4046-8c43-cfe48b368674"
      },
      "source": [
        "# exploration of the daily_intensities dataset\n",
        "exploration(daily_intensities)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(940, 10) \n",
            "\n",
            "Id                            int64\n",
            "ActivityDay                  object\n",
            "SedentaryMinutes              int64\n",
            "LightlyActiveMinutes          int64\n",
            "FairlyActiveMinutes           int64\n",
            "VeryActiveMinutes             int64\n",
            "SedentaryActiveDistance     float64\n",
            "LightActiveDistance         float64\n",
            "ModeratelyActiveDistance    float64\n",
            "VeryActiveDistance          float64\n",
            "dtype: object \n",
            "\n",
            "Id                          0\n",
            "ActivityDay                 0\n",
            "SedentaryMinutes            0\n",
            "LightlyActiveMinutes        0\n",
            "FairlyActiveMinutes         0\n",
            "VeryActiveMinutes           0\n",
            "SedentaryActiveDistance     0\n",
            "LightActiveDistance         0\n",
            "ModeratelyActiveDistance    0\n",
            "VeryActiveDistance          0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "yg1i_dyj8oms",
        "outputId": "7f557e4d-f33b-49b0-85f7-4ef3cf58a514"
      },
      "source": [
        "daily_intensities.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityDay</th>\n",
              "      <th>SedentaryMinutes</th>\n",
              "      <th>LightlyActiveMinutes</th>\n",
              "      <th>FairlyActiveMinutes</th>\n",
              "      <th>VeryActiveMinutes</th>\n",
              "      <th>SedentaryActiveDistance</th>\n",
              "      <th>LightActiveDistance</th>\n",
              "      <th>ModeratelyActiveDistance</th>\n",
              "      <th>VeryActiveDistance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016</td>\n",
              "      <td>728</td>\n",
              "      <td>328</td>\n",
              "      <td>13</td>\n",
              "      <td>25</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.06</td>\n",
              "      <td>0.55</td>\n",
              "      <td>1.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016</td>\n",
              "      <td>776</td>\n",
              "      <td>217</td>\n",
              "      <td>19</td>\n",
              "      <td>21</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.71</td>\n",
              "      <td>0.69</td>\n",
              "      <td>1.57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/14/2016</td>\n",
              "      <td>1218</td>\n",
              "      <td>181</td>\n",
              "      <td>11</td>\n",
              "      <td>30</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.91</td>\n",
              "      <td>0.40</td>\n",
              "      <td>2.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/15/2016</td>\n",
              "      <td>726</td>\n",
              "      <td>209</td>\n",
              "      <td>34</td>\n",
              "      <td>29</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.83</td>\n",
              "      <td>1.26</td>\n",
              "      <td>2.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/16/2016</td>\n",
              "      <td>773</td>\n",
              "      <td>221</td>\n",
              "      <td>10</td>\n",
              "      <td>36</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.04</td>\n",
              "      <td>0.41</td>\n",
              "      <td>2.71</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id ActivityDay  ...  ModeratelyActiveDistance  VeryActiveDistance\n",
              "0  1503960366   4/12/2016  ...                      0.55                1.88\n",
              "1  1503960366   4/13/2016  ...                      0.69                1.57\n",
              "2  1503960366   4/14/2016  ...                      0.40                2.44\n",
              "3  1503960366   4/15/2016  ...                      1.26                2.14\n",
              "4  1503960366   4/16/2016  ...                      0.41                2.71\n",
              "\n",
              "[5 rows x 10 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yJD6MMFL81oc",
        "outputId": "7457c63f-49a2-411e-e188-5f8a7b372de8"
      },
      "source": [
        "# exploration of the daily_steps dataset\n",
        "exploration(daily_steps)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(940, 3) \n",
            "\n",
            "Id              int64\n",
            "ActivityDay    object\n",
            "StepTotal       int64\n",
            "dtype: object \n",
            "\n",
            "Id             0\n",
            "ActivityDay    0\n",
            "StepTotal      0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "a1RE_f_a9JU3",
        "outputId": "9b57f506-578c-41c9-c7d7-1f4d28ce7fc1"
      },
      "source": [
        "daily_steps.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityDay</th>\n",
              "      <th>StepTotal</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016</td>\n",
              "      <td>13162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016</td>\n",
              "      <td>10735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/14/2016</td>\n",
              "      <td>10460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/15/2016</td>\n",
              "      <td>9762</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/16/2016</td>\n",
              "      <td>12669</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id ActivityDay  StepTotal\n",
              "0  1503960366   4/12/2016      13162\n",
              "1  1503960366   4/13/2016      10735\n",
              "2  1503960366   4/14/2016      10460\n",
              "3  1503960366   4/15/2016       9762\n",
              "4  1503960366   4/16/2016      12669"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SYhWUEC0DUgW"
      },
      "source": [
        "From the above output, it seems the `daily_activity` dataset contains same columns as in `daily_calories, daily_intensities and daily_steps`. Therefore, I will work with only the `daily_activity` dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lbf-FoXs9RS3",
        "outputId": "8e039a8e-97cc-455a-eae6-c0063a74fa02"
      },
      "source": [
        "# exploration of the heartrate_seconds dataset\n",
        "exploration(heartrate_seconds)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(2483658, 3) \n",
            "\n",
            "Id        int64\n",
            "Time     object\n",
            "Value     int64\n",
            "dtype: object \n",
            "\n",
            "Id       0\n",
            "Time     0\n",
            "Value    0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "ZZsJBzDj9mMM",
        "outputId": "69900c4e-e80c-4ee2-817f-bfdd0f82bf3b"
      },
      "source": [
        "heartrate_seconds.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>Time</th>\n",
              "      <th>Value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022484408</td>\n",
              "      <td>4/12/2016 7:21:00 AM</td>\n",
              "      <td>97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022484408</td>\n",
              "      <td>4/12/2016 7:21:05 AM</td>\n",
              "      <td>102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022484408</td>\n",
              "      <td>4/12/2016 7:21:10 AM</td>\n",
              "      <td>105</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022484408</td>\n",
              "      <td>4/12/2016 7:21:20 AM</td>\n",
              "      <td>103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022484408</td>\n",
              "      <td>4/12/2016 7:21:25 AM</td>\n",
              "      <td>101</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id                  Time  Value\n",
              "0  2022484408  4/12/2016 7:21:00 AM     97\n",
              "1  2022484408  4/12/2016 7:21:05 AM    102\n",
              "2  2022484408  4/12/2016 7:21:10 AM    105\n",
              "3  2022484408  4/12/2016 7:21:20 AM    103\n",
              "4  2022484408  4/12/2016 7:21:25 AM    101"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dSsr_k2G9okf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "66c9c6be-850b-42c4-e656-99f83db416b2"
      },
      "source": [
        "# exploration of the hourly_calories dataset\n",
        "exploration(hourly_calories)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(22099, 3) \n",
            "\n",
            "Id               int64\n",
            "ActivityHour    object\n",
            "Calories         int64\n",
            "dtype: object \n",
            "\n",
            "Id              0\n",
            "ActivityHour    0\n",
            "Calories        0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "d6qP1isZ2B0X",
        "outputId": "e633f288-4259-480b-e48b-1ed1f924eb18"
      },
      "source": [
        "hourly_calories.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 1:00:00 AM</td>\n",
              "      <td>61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:00:00 AM</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 3:00:00 AM</td>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 4:00:00 AM</td>\n",
              "      <td>48</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  Calories\n",
              "0  1503960366  4/12/2016 12:00:00 AM        81\n",
              "1  1503960366   4/12/2016 1:00:00 AM        61\n",
              "2  1503960366   4/12/2016 2:00:00 AM        59\n",
              "3  1503960366   4/12/2016 3:00:00 AM        47\n",
              "4  1503960366   4/12/2016 4:00:00 AM        48"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AyC8T6Bh7BNm",
        "outputId": "5f90d158-e22e-466e-ed58-164288511508"
      },
      "source": [
        "# exploration of the hourly_intensities dataset\n",
        "exploration(hourly_intensities)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(22099, 4) \n",
            "\n",
            "Id                    int64\n",
            "ActivityHour         object\n",
            "TotalIntensity        int64\n",
            "AverageIntensity    float64\n",
            "dtype: object \n",
            "\n",
            "Id                  0\n",
            "ActivityHour        0\n",
            "TotalIntensity      0\n",
            "AverageIntensity    0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "iPTYdfdT9BHe",
        "outputId": "e644ce79-b953-45d6-cff0-b3ec7423786e"
      },
      "source": [
        "hourly_intensities.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>TotalIntensity</th>\n",
              "      <th>AverageIntensity</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>20</td>\n",
              "      <td>0.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 1:00:00 AM</td>\n",
              "      <td>8</td>\n",
              "      <td>0.133333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:00:00 AM</td>\n",
              "      <td>7</td>\n",
              "      <td>0.116667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 3:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 4:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  TotalIntensity  AverageIntensity\n",
              "0  1503960366  4/12/2016 12:00:00 AM              20          0.333333\n",
              "1  1503960366   4/12/2016 1:00:00 AM               8          0.133333\n",
              "2  1503960366   4/12/2016 2:00:00 AM               7          0.116667\n",
              "3  1503960366   4/12/2016 3:00:00 AM               0          0.000000\n",
              "4  1503960366   4/12/2016 4:00:00 AM               0          0.000000"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XabLOSRp9Qoc",
        "outputId": "ba4ede41-45b3-4e85-d4d1-0071504d31db"
      },
      "source": [
        "# exploration of the hourly_steps dataset\n",
        "exploration(hourly_steps)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(22099, 3) \n",
            "\n",
            "Id               int64\n",
            "ActivityHour    object\n",
            "StepTotal        int64\n",
            "dtype: object \n",
            "\n",
            "Id              0\n",
            "ActivityHour    0\n",
            "StepTotal       0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "ZAOw3uhe9bma",
        "outputId": "c8ce0799-caf8-4d15-d528-b242f9520d44"
      },
      "source": [
        "hourly_steps.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>StepTotal</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 1:00:00 AM</td>\n",
              "      <td>160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:00:00 AM</td>\n",
              "      <td>151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 3:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 4:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  StepTotal\n",
              "0  1503960366  4/12/2016 12:00:00 AM        373\n",
              "1  1503960366   4/12/2016 1:00:00 AM        160\n",
              "2  1503960366   4/12/2016 2:00:00 AM        151\n",
              "3  1503960366   4/12/2016 3:00:00 AM          0\n",
              "4  1503960366   4/12/2016 4:00:00 AM          0"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Uqf6k6hNEJxy"
      },
      "source": [
        "The `hourly_calories, hourly_intensities and hourly_steps datasets` can be merged to form one dataframe"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gDnb6krV9lbx",
        "outputId": "3d2f07f7-a54f-48c4-f9ce-0423c031d717"
      },
      "source": [
        "# exploration of the minute_calories_narrow dataset\n",
        "exploration(minute_calories_narrow)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1325580, 3) \n",
            "\n",
            "Id                  int64\n",
            "ActivityMinute     object\n",
            "Calories          float64\n",
            "dtype: object \n",
            "\n",
            "Id                0\n",
            "ActivityMinute    0\n",
            "Calories          0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "H7gHvu6L91Vs",
        "outputId": "52cd9322-451b-4344-baf1-a6008ea91e3e"
      },
      "source": [
        "minute_calories_narrow.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityMinute</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:01:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:02:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:03:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:04:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id         ActivityMinute  Calories\n",
              "0  1503960366  4/12/2016 12:00:00 AM    0.7865\n",
              "1  1503960366  4/12/2016 12:01:00 AM    0.7865\n",
              "2  1503960366  4/12/2016 12:02:00 AM    0.7865\n",
              "3  1503960366  4/12/2016 12:03:00 AM    0.7865\n",
              "4  1503960366  4/12/2016 12:04:00 AM    0.7865"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VyXFKZSw96o1",
        "outputId": "67b6e04b-15ca-46e4-b159-c208e1fc4051"
      },
      "source": [
        "# exploration of the minute_calories_wide dataset\n",
        "exploration(minute_calories_wide)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(21645, 62) \n",
            "\n",
            "Id                int64\n",
            "ActivityHour     object\n",
            "Calories00      float64\n",
            "Calories01      float64\n",
            "Calories02      float64\n",
            "                 ...   \n",
            "Calories55      float64\n",
            "Calories56      float64\n",
            "Calories57      float64\n",
            "Calories58      float64\n",
            "Calories59      float64\n",
            "Length: 62, dtype: object \n",
            "\n",
            "Id              0\n",
            "ActivityHour    0\n",
            "Calories00      0\n",
            "Calories01      0\n",
            "Calories02      0\n",
            "               ..\n",
            "Calories55      0\n",
            "Calories56      0\n",
            "Calories57      0\n",
            "Calories58      0\n",
            "Calories59      0\n",
            "Length: 62, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 309
        },
        "id": "hr6QjjSz9_JI",
        "outputId": "503b7bac-3dcd-4ec4-bc94-d775c4efe19a"
      },
      "source": [
        "minute_calories_wide.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>Calories00</th>\n",
              "      <th>Calories01</th>\n",
              "      <th>Calories02</th>\n",
              "      <th>Calories03</th>\n",
              "      <th>Calories04</th>\n",
              "      <th>Calories05</th>\n",
              "      <th>Calories06</th>\n",
              "      <th>Calories07</th>\n",
              "      <th>Calories08</th>\n",
              "      <th>Calories09</th>\n",
              "      <th>Calories10</th>\n",
              "      <th>Calories11</th>\n",
              "      <th>Calories12</th>\n",
              "      <th>Calories13</th>\n",
              "      <th>Calories14</th>\n",
              "      <th>Calories15</th>\n",
              "      <th>Calories16</th>\n",
              "      <th>Calories17</th>\n",
              "      <th>Calories18</th>\n",
              "      <th>Calories19</th>\n",
              "      <th>Calories20</th>\n",
              "      <th>Calories21</th>\n",
              "      <th>Calories22</th>\n",
              "      <th>Calories23</th>\n",
              "      <th>Calories24</th>\n",
              "      <th>Calories25</th>\n",
              "      <th>Calories26</th>\n",
              "      <th>Calories27</th>\n",
              "      <th>Calories28</th>\n",
              "      <th>Calories29</th>\n",
              "      <th>Calories30</th>\n",
              "      <th>Calories31</th>\n",
              "      <th>Calories32</th>\n",
              "      <th>Calories33</th>\n",
              "      <th>Calories34</th>\n",
              "      <th>Calories35</th>\n",
              "      <th>Calories36</th>\n",
              "      <th>Calories37</th>\n",
              "      <th>Calories38</th>\n",
              "      <th>Calories39</th>\n",
              "      <th>Calories40</th>\n",
              "      <th>Calories41</th>\n",
              "      <th>Calories42</th>\n",
              "      <th>Calories43</th>\n",
              "      <th>Calories44</th>\n",
              "      <th>Calories45</th>\n",
              "      <th>Calories46</th>\n",
              "      <th>Calories47</th>\n",
              "      <th>Calories48</th>\n",
              "      <th>Calories49</th>\n",
              "      <th>Calories50</th>\n",
              "      <th>Calories51</th>\n",
              "      <th>Calories52</th>\n",
              "      <th>Calories53</th>\n",
              "      <th>Calories54</th>\n",
              "      <th>Calories55</th>\n",
              "      <th>Calories56</th>\n",
              "      <th>Calories57</th>\n",
              "      <th>Calories58</th>\n",
              "      <th>Calories59</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 12:00:00 AM</td>\n",
              "      <td>1.8876</td>\n",
              "      <td>2.2022</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.2022</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>1.8876</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>2.3595</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>1.8876</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.3595</td>\n",
              "      <td>1.8876</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 1:00:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 2:00:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 3:00:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>2.0449</td>\n",
              "      <td>1.8876</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 4:00:00 AM</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.9438</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "      <td>0.7865</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  ...  Calories58  Calories59\n",
              "0  1503960366  4/13/2016 12:00:00 AM  ...      0.9438      0.9438\n",
              "1  1503960366   4/13/2016 1:00:00 AM  ...      0.7865      0.7865\n",
              "2  1503960366   4/13/2016 2:00:00 AM  ...      0.7865      0.7865\n",
              "3  1503960366   4/13/2016 3:00:00 AM  ...      0.7865      0.7865\n",
              "4  1503960366   4/13/2016 4:00:00 AM  ...      0.7865      0.7865\n",
              "\n",
              "[5 rows x 62 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iMXRp0yM-PkF"
      },
      "source": [
        "all_files = [daily_activity, daily_calories, daily_intensities, daily_steps, heartrate_seconds, hourly_calories, \n",
        "             hourly_intensities, hourly_steps, minute_calories_narrow, minute_calories_wide, minute_intensities_narrow, \n",
        "             minute_intensities_wide, minute_mets_narrow, minute_sleep, minute_steps_narrow, minute_steps_wide, sleep_day, weight_log_info]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v2Oejiot-zjb",
        "outputId": "debf9f4e-153d-4a9a-8a86-30b4098c8ec5"
      },
      "source": [
        "# exploration of the minute_intensities_narrow dataset\n",
        "exploration(minute_intensities_narrow)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1325580, 3) \n",
            "\n",
            "Id                 int64\n",
            "ActivityMinute    object\n",
            "Intensity          int64\n",
            "dtype: object \n",
            "\n",
            "Id                0\n",
            "ActivityMinute    0\n",
            "Intensity         0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "pr0fc5cH-_YS",
        "outputId": "f912d36e-b451-48f3-c80a-d73a368792e1"
      },
      "source": [
        "minute_intensities_narrow.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityMinute</th>\n",
              "      <th>Intensity</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:01:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:02:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:03:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:04:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id         ActivityMinute  Intensity\n",
              "0  1503960366  4/12/2016 12:00:00 AM          0\n",
              "1  1503960366  4/12/2016 12:01:00 AM          0\n",
              "2  1503960366  4/12/2016 12:02:00 AM          0\n",
              "3  1503960366  4/12/2016 12:03:00 AM          0\n",
              "4  1503960366  4/12/2016 12:04:00 AM          0"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W9jonDqT_I6B",
        "outputId": "ccea2c87-fe37-4c78-c869-10bcfc5a7ccd"
      },
      "source": [
        "# exploration of the minute_intensities_wide dataset\n",
        "exploration(minute_intensities_wide)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(21645, 62) \n",
            "\n",
            "Id               int64\n",
            "ActivityHour    object\n",
            "Intensity00      int64\n",
            "Intensity01      int64\n",
            "Intensity02      int64\n",
            "                 ...  \n",
            "Intensity55      int64\n",
            "Intensity56      int64\n",
            "Intensity57      int64\n",
            "Intensity58      int64\n",
            "Intensity59      int64\n",
            "Length: 62, dtype: object \n",
            "\n",
            "Id              0\n",
            "ActivityHour    0\n",
            "Intensity00     0\n",
            "Intensity01     0\n",
            "Intensity02     0\n",
            "               ..\n",
            "Intensity55     0\n",
            "Intensity56     0\n",
            "Intensity57     0\n",
            "Intensity58     0\n",
            "Intensity59     0\n",
            "Length: 62, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 309
        },
        "id": "kXwfKqno_00g",
        "outputId": "e657ea47-6494-4a4d-eeed-cbd58488396f"
      },
      "source": [
        "minute_intensities_wide.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>Intensity00</th>\n",
              "      <th>Intensity01</th>\n",
              "      <th>Intensity02</th>\n",
              "      <th>Intensity03</th>\n",
              "      <th>Intensity04</th>\n",
              "      <th>Intensity05</th>\n",
              "      <th>Intensity06</th>\n",
              "      <th>Intensity07</th>\n",
              "      <th>Intensity08</th>\n",
              "      <th>Intensity09</th>\n",
              "      <th>Intensity10</th>\n",
              "      <th>Intensity11</th>\n",
              "      <th>Intensity12</th>\n",
              "      <th>Intensity13</th>\n",
              "      <th>Intensity14</th>\n",
              "      <th>Intensity15</th>\n",
              "      <th>Intensity16</th>\n",
              "      <th>Intensity17</th>\n",
              "      <th>Intensity18</th>\n",
              "      <th>Intensity19</th>\n",
              "      <th>Intensity20</th>\n",
              "      <th>Intensity21</th>\n",
              "      <th>Intensity22</th>\n",
              "      <th>Intensity23</th>\n",
              "      <th>Intensity24</th>\n",
              "      <th>Intensity25</th>\n",
              "      <th>Intensity26</th>\n",
              "      <th>Intensity27</th>\n",
              "      <th>Intensity28</th>\n",
              "      <th>Intensity29</th>\n",
              "      <th>Intensity30</th>\n",
              "      <th>Intensity31</th>\n",
              "      <th>Intensity32</th>\n",
              "      <th>Intensity33</th>\n",
              "      <th>Intensity34</th>\n",
              "      <th>Intensity35</th>\n",
              "      <th>Intensity36</th>\n",
              "      <th>Intensity37</th>\n",
              "      <th>Intensity38</th>\n",
              "      <th>Intensity39</th>\n",
              "      <th>Intensity40</th>\n",
              "      <th>Intensity41</th>\n",
              "      <th>Intensity42</th>\n",
              "      <th>Intensity43</th>\n",
              "      <th>Intensity44</th>\n",
              "      <th>Intensity45</th>\n",
              "      <th>Intensity46</th>\n",
              "      <th>Intensity47</th>\n",
              "      <th>Intensity48</th>\n",
              "      <th>Intensity49</th>\n",
              "      <th>Intensity50</th>\n",
              "      <th>Intensity51</th>\n",
              "      <th>Intensity52</th>\n",
              "      <th>Intensity53</th>\n",
              "      <th>Intensity54</th>\n",
              "      <th>Intensity55</th>\n",
              "      <th>Intensity56</th>\n",
              "      <th>Intensity57</th>\n",
              "      <th>Intensity58</th>\n",
              "      <th>Intensity59</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 12:00:00 AM</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 1:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 2:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 3:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 4:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  ...  Intensity58  Intensity59\n",
              "0  1503960366  4/13/2016 12:00:00 AM  ...            0            0\n",
              "1  1503960366   4/13/2016 1:00:00 AM  ...            0            0\n",
              "2  1503960366   4/13/2016 2:00:00 AM  ...            0            0\n",
              "3  1503960366   4/13/2016 3:00:00 AM  ...            0            0\n",
              "4  1503960366   4/13/2016 4:00:00 AM  ...            0            0\n",
              "\n",
              "[5 rows x 62 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qHNfxSjR_-04",
        "outputId": "0beb2574-c3f6-49ea-c459-541d19adc6ff"
      },
      "source": [
        "# exploration of the minute_mets_narrow dataset\n",
        "exploration(minute_mets_narrow)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1325580, 3) \n",
            "\n",
            "Id                 int64\n",
            "ActivityMinute    object\n",
            "METs               int64\n",
            "dtype: object \n",
            "\n",
            "Id                0\n",
            "ActivityMinute    0\n",
            "METs              0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "PZ0m2bG9AV0A",
        "outputId": "b1ce6ee4-a71e-426f-a333-b9b3ee888da0"
      },
      "source": [
        "minute_mets_narrow.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityMinute</th>\n",
              "      <th>METs</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:01:00 AM</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:02:00 AM</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:03:00 AM</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:04:00 AM</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id         ActivityMinute  METs\n",
              "0  1503960366  4/12/2016 12:00:00 AM    10\n",
              "1  1503960366  4/12/2016 12:01:00 AM    10\n",
              "2  1503960366  4/12/2016 12:02:00 AM    10\n",
              "3  1503960366  4/12/2016 12:03:00 AM    10\n",
              "4  1503960366  4/12/2016 12:04:00 AM    10"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eGLqabfJAZgc",
        "outputId": "324fed8f-ea72-45a1-8948-b10ed2aafdc1"
      },
      "source": [
        "# exploration of the minute_sleep dataset\n",
        "exploration(minute_sleep)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(188521, 4) \n",
            "\n",
            "Id        int64\n",
            "date     object\n",
            "value     int64\n",
            "logId     int64\n",
            "dtype: object \n",
            "\n",
            "Id       0\n",
            "date     0\n",
            "value    0\n",
            "logId    0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "VJhrc_siAp8l",
        "outputId": "2147a728-064b-4fab-fb45-8df1a892580b"
      },
      "source": [
        "minute_sleep.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>date</th>\n",
              "      <th>value</th>\n",
              "      <th>logId</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:47:30 AM</td>\n",
              "      <td>3</td>\n",
              "      <td>11380564589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:48:30 AM</td>\n",
              "      <td>2</td>\n",
              "      <td>11380564589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:49:30 AM</td>\n",
              "      <td>1</td>\n",
              "      <td>11380564589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:50:30 AM</td>\n",
              "      <td>1</td>\n",
              "      <td>11380564589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:51:30 AM</td>\n",
              "      <td>1</td>\n",
              "      <td>11380564589</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id                  date  value        logId\n",
              "0  1503960366  4/12/2016 2:47:30 AM      3  11380564589\n",
              "1  1503960366  4/12/2016 2:48:30 AM      2  11380564589\n",
              "2  1503960366  4/12/2016 2:49:30 AM      1  11380564589\n",
              "3  1503960366  4/12/2016 2:50:30 AM      1  11380564589\n",
              "4  1503960366  4/12/2016 2:51:30 AM      1  11380564589"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4wHKiO3VAsjJ",
        "outputId": "a0eb62b3-4d0d-4c55-aeec-6f8ec29147e1"
      },
      "source": [
        "# exploration of the minute_steps_narrow dataset\n",
        "exploration(minute_steps_narrow)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1325580, 3) \n",
            "\n",
            "Id                 int64\n",
            "ActivityMinute    object\n",
            "Steps              int64\n",
            "dtype: object \n",
            "\n",
            "Id                0\n",
            "ActivityMinute    0\n",
            "Steps             0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "2pP7hYqvA6G9",
        "outputId": "b757b527-eccd-4f38-f24f-b7c9710a4a63"
      },
      "source": [
        "minute_steps_narrow.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityMinute</th>\n",
              "      <th>Steps</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:01:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:02:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:03:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:04:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id         ActivityMinute  Steps\n",
              "0  1503960366  4/12/2016 12:00:00 AM      0\n",
              "1  1503960366  4/12/2016 12:01:00 AM      0\n",
              "2  1503960366  4/12/2016 12:02:00 AM      0\n",
              "3  1503960366  4/12/2016 12:03:00 AM      0\n",
              "4  1503960366  4/12/2016 12:04:00 AM      0"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x--tISVyA89d",
        "outputId": "4a01ade7-7d9c-423e-d80f-e8b7c77f41c7"
      },
      "source": [
        "# exploration of the minute_steps_wide dataset\n",
        "exploration(minute_steps_wide)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(21645, 62) \n",
            "\n",
            "Id               int64\n",
            "ActivityHour    object\n",
            "Steps00          int64\n",
            "Steps01          int64\n",
            "Steps02          int64\n",
            "                 ...  \n",
            "Steps55          int64\n",
            "Steps56          int64\n",
            "Steps57          int64\n",
            "Steps58          int64\n",
            "Steps59          int64\n",
            "Length: 62, dtype: object \n",
            "\n",
            "Id              0\n",
            "ActivityHour    0\n",
            "Steps00         0\n",
            "Steps01         0\n",
            "Steps02         0\n",
            "               ..\n",
            "Steps55         0\n",
            "Steps56         0\n",
            "Steps57         0\n",
            "Steps58         0\n",
            "Steps59         0\n",
            "Length: 62, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 309
        },
        "id": "lqxPMaYsBLKI",
        "outputId": "f46c1ab4-c1d8-4b50-99cd-ad5526e8be76"
      },
      "source": [
        "minute_steps_wide.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>Steps00</th>\n",
              "      <th>Steps01</th>\n",
              "      <th>Steps02</th>\n",
              "      <th>Steps03</th>\n",
              "      <th>Steps04</th>\n",
              "      <th>Steps05</th>\n",
              "      <th>Steps06</th>\n",
              "      <th>Steps07</th>\n",
              "      <th>Steps08</th>\n",
              "      <th>Steps09</th>\n",
              "      <th>Steps10</th>\n",
              "      <th>Steps11</th>\n",
              "      <th>Steps12</th>\n",
              "      <th>Steps13</th>\n",
              "      <th>Steps14</th>\n",
              "      <th>Steps15</th>\n",
              "      <th>Steps16</th>\n",
              "      <th>Steps17</th>\n",
              "      <th>Steps18</th>\n",
              "      <th>Steps19</th>\n",
              "      <th>Steps20</th>\n",
              "      <th>Steps21</th>\n",
              "      <th>Steps22</th>\n",
              "      <th>Steps23</th>\n",
              "      <th>Steps24</th>\n",
              "      <th>Steps25</th>\n",
              "      <th>Steps26</th>\n",
              "      <th>Steps27</th>\n",
              "      <th>Steps28</th>\n",
              "      <th>Steps29</th>\n",
              "      <th>Steps30</th>\n",
              "      <th>Steps31</th>\n",
              "      <th>Steps32</th>\n",
              "      <th>Steps33</th>\n",
              "      <th>Steps34</th>\n",
              "      <th>Steps35</th>\n",
              "      <th>Steps36</th>\n",
              "      <th>Steps37</th>\n",
              "      <th>Steps38</th>\n",
              "      <th>Steps39</th>\n",
              "      <th>Steps40</th>\n",
              "      <th>Steps41</th>\n",
              "      <th>Steps42</th>\n",
              "      <th>Steps43</th>\n",
              "      <th>Steps44</th>\n",
              "      <th>Steps45</th>\n",
              "      <th>Steps46</th>\n",
              "      <th>Steps47</th>\n",
              "      <th>Steps48</th>\n",
              "      <th>Steps49</th>\n",
              "      <th>Steps50</th>\n",
              "      <th>Steps51</th>\n",
              "      <th>Steps52</th>\n",
              "      <th>Steps53</th>\n",
              "      <th>Steps54</th>\n",
              "      <th>Steps55</th>\n",
              "      <th>Steps56</th>\n",
              "      <th>Steps57</th>\n",
              "      <th>Steps58</th>\n",
              "      <th>Steps59</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 12:00:00 AM</td>\n",
              "      <td>4</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 1:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 2:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 3:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 4:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  Steps00  ...  Steps57  Steps58  Steps59\n",
              "0  1503960366  4/13/2016 12:00:00 AM        4  ...        0        0        0\n",
              "1  1503960366   4/13/2016 1:00:00 AM        0  ...        0        0        0\n",
              "2  1503960366   4/13/2016 2:00:00 AM        0  ...        0        0        0\n",
              "3  1503960366   4/13/2016 3:00:00 AM        0  ...        0        0        0\n",
              "4  1503960366   4/13/2016 4:00:00 AM        0  ...        0        0        0\n",
              "\n",
              "[5 rows x 62 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "saKBK_UcHVDc"
      },
      "source": [
        "The `minute datasets` does not seem relevant for our analysis. There were almost null data recorded."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZPLkvAhbBOMk",
        "outputId": "3679cd95-036e-46b8-c330-80eb88d3a118"
      },
      "source": [
        "# exploration of the sleep_day dataset\n",
        "exploration(sleep_day)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(413, 5) \n",
            "\n",
            "Id                     int64\n",
            "SleepDay              object\n",
            "TotalSleepRecords      int64\n",
            "TotalMinutesAsleep     int64\n",
            "TotalTimeInBed         int64\n",
            "dtype: object \n",
            "\n",
            "Id                    0\n",
            "SleepDay              0\n",
            "TotalSleepRecords     0\n",
            "TotalMinutesAsleep    0\n",
            "TotalTimeInBed        0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "kcxvToo6CMhZ",
        "outputId": "07d9a004-a759-486a-c401-fc9eb3657579"
      },
      "source": [
        "sleep_day.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>SleepDay</th>\n",
              "      <th>TotalSleepRecords</th>\n",
              "      <th>TotalMinutesAsleep</th>\n",
              "      <th>TotalTimeInBed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>1</td>\n",
              "      <td>327</td>\n",
              "      <td>346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/13/2016 12:00:00 AM</td>\n",
              "      <td>2</td>\n",
              "      <td>384</td>\n",
              "      <td>407</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/15/2016 12:00:00 AM</td>\n",
              "      <td>1</td>\n",
              "      <td>412</td>\n",
              "      <td>442</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/16/2016 12:00:00 AM</td>\n",
              "      <td>2</td>\n",
              "      <td>340</td>\n",
              "      <td>367</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/17/2016 12:00:00 AM</td>\n",
              "      <td>1</td>\n",
              "      <td>700</td>\n",
              "      <td>712</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id               SleepDay  ...  TotalMinutesAsleep  TotalTimeInBed\n",
              "0  1503960366  4/12/2016 12:00:00 AM  ...                 327             346\n",
              "1  1503960366  4/13/2016 12:00:00 AM  ...                 384             407\n",
              "2  1503960366  4/15/2016 12:00:00 AM  ...                 412             442\n",
              "3  1503960366  4/16/2016 12:00:00 AM  ...                 340             367\n",
              "4  1503960366  4/17/2016 12:00:00 AM  ...                 700             712\n",
              "\n",
              "[5 rows x 5 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bKaE_B85CQMN",
        "outputId": "44205742-802d-4097-e466-580fe1352778"
      },
      "source": [
        "# exploration of the weight_log_info dataset\n",
        "exploration(weight_log_info)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(67, 8) \n",
            "\n",
            "Id                  int64\n",
            "Date               object\n",
            "WeightKg          float64\n",
            "WeightPounds      float64\n",
            "Fat               float64\n",
            "BMI               float64\n",
            "IsManualReport       bool\n",
            "LogId               int64\n",
            "dtype: object \n",
            "\n",
            "Id                 0\n",
            "Date               0\n",
            "WeightKg           0\n",
            "WeightPounds       0\n",
            "Fat               65\n",
            "BMI                0\n",
            "IsManualReport     0\n",
            "LogId              0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "Vq9PAY9mC1Co",
        "outputId": "d70efac4-a107-4d72-d954-da4dd6a5baf5"
      },
      "source": [
        "weight_log_info.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>Date</th>\n",
              "      <th>WeightKg</th>\n",
              "      <th>WeightPounds</th>\n",
              "      <th>Fat</th>\n",
              "      <th>BMI</th>\n",
              "      <th>IsManualReport</th>\n",
              "      <th>LogId</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>5/2/2016 11:59:59 PM</td>\n",
              "      <td>52.599998</td>\n",
              "      <td>115.963147</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.650000</td>\n",
              "      <td>True</td>\n",
              "      <td>1462233599000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>5/3/2016 11:59:59 PM</td>\n",
              "      <td>52.599998</td>\n",
              "      <td>115.963147</td>\n",
              "      <td>NaN</td>\n",
              "      <td>22.650000</td>\n",
              "      <td>True</td>\n",
              "      <td>1462319999000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1927972279</td>\n",
              "      <td>4/13/2016 1:08:52 AM</td>\n",
              "      <td>133.500000</td>\n",
              "      <td>294.317120</td>\n",
              "      <td>NaN</td>\n",
              "      <td>47.540001</td>\n",
              "      <td>False</td>\n",
              "      <td>1460509732000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2873212765</td>\n",
              "      <td>4/21/2016 11:59:59 PM</td>\n",
              "      <td>56.700001</td>\n",
              "      <td>125.002104</td>\n",
              "      <td>NaN</td>\n",
              "      <td>21.450001</td>\n",
              "      <td>True</td>\n",
              "      <td>1461283199000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2873212765</td>\n",
              "      <td>5/12/2016 11:59:59 PM</td>\n",
              "      <td>57.299999</td>\n",
              "      <td>126.324875</td>\n",
              "      <td>NaN</td>\n",
              "      <td>21.690001</td>\n",
              "      <td>True</td>\n",
              "      <td>1463097599000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id                   Date  ...  IsManualReport          LogId\n",
              "0  1503960366   5/2/2016 11:59:59 PM  ...            True  1462233599000\n",
              "1  1503960366   5/3/2016 11:59:59 PM  ...            True  1462319999000\n",
              "2  1927972279   4/13/2016 1:08:52 AM  ...           False  1460509732000\n",
              "3  2873212765  4/21/2016 11:59:59 PM  ...            True  1461283199000\n",
              "4  2873212765  5/12/2016 11:59:59 PM  ...            True  1463097599000\n",
              "\n",
              "[5 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NHDCYE1-Jg0O"
      },
      "source": [
        "Therefore, I am left with only the `daily_activity, hourly datasets, sleep_day and weight_log_info` data to work with in this case study.\n",
        "\n",
        "First, I will convert the `ActivityDate` column in the `daily_activity` dataset to datetime data type; then merge the `hourly` datasets"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "E9NkOvInC3PE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fb582ccf-545c-4c7c-9acb-fc0958745614"
      },
      "source": [
        "# converting to datetime datatype\n",
        "daily_activity['ActivityDate'] = daily_activity['ActivityDate'].astype('datetime64[ns]')\n",
        "\n",
        "# verifying the conversion\n",
        "daily_activity.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Id                                   int64\n",
              "ActivityDate                datetime64[ns]\n",
              "TotalSteps                           int64\n",
              "TotalDistance                      float64\n",
              "TrackerDistance                    float64\n",
              "LoggedActivitiesDistance           float64\n",
              "VeryActiveDistance                 float64\n",
              "ModeratelyActiveDistance           float64\n",
              "LightActiveDistance                float64\n",
              "SedentaryActiveDistance            float64\n",
              "VeryActiveMinutes                    int64\n",
              "FairlyActiveMinutes                  int64\n",
              "LightlyActiveMinutes                 int64\n",
              "SedentaryMinutes                     int64\n",
              "Calories                             int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f4mkSZ-vXY0N"
      },
      "source": [
        "Now, I am done with the data exploration and cleaning the FitBit datasets. However, for the rest of the analysis in this case study, I will work with only the `daily_activity and hourly_activity` data. \n",
        "\n",
        "###**2.2 Further processing of the Hourly Activity Dataset**\n",
        "Now I will make sure that the `Id` and `ActivityHour` columns are identical across the three hourly datasets before joining them. From previous exploration, all the hourly datasets has same number of rows"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "V-Pfcp3oXtX1",
        "outputId": "64518dc9-85a6-4a6e-948a-c520a38a41bb"
      },
      "source": [
        "# assign variables for the Id columns in the three datasets\n",
        "hc = hourly_calories['Id'].value_counts().sort_index()\n",
        "hi = hourly_intensities['Id'].value_counts().sort_index()\n",
        "hs = hourly_steps['Id'].value_counts().sort_index()\n",
        "\n",
        "\n",
        "\n",
        "# putting all together in a dataframe\n",
        "hcis = pd.DataFrame()\n",
        "hcis['calories'] = hc\n",
        "hcis['intensities'] = hi \n",
        "hcis['steps'] = hs \n",
        "hcis"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>calories</th>\n",
              "      <th>intensities</th>\n",
              "      <th>steps</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1503960366</th>\n",
              "      <td>717</td>\n",
              "      <td>717</td>\n",
              "      <td>717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1624580081</th>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1644430081</th>\n",
              "      <td>708</td>\n",
              "      <td>708</td>\n",
              "      <td>708</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1844505072</th>\n",
              "      <td>731</td>\n",
              "      <td>731</td>\n",
              "      <td>731</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1927972279</th>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022484408</th>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026352035</th>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2320127002</th>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2347167796</th>\n",
              "      <td>414</td>\n",
              "      <td>414</td>\n",
              "      <td>414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2873212765</th>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3372868164</th>\n",
              "      <td>472</td>\n",
              "      <td>472</td>\n",
              "      <td>472</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3977333714</th>\n",
              "      <td>696</td>\n",
              "      <td>696</td>\n",
              "      <td>696</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4020332650</th>\n",
              "      <td>732</td>\n",
              "      <td>732</td>\n",
              "      <td>732</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4057192912</th>\n",
              "      <td>88</td>\n",
              "      <td>88</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4319703577</th>\n",
              "      <td>724</td>\n",
              "      <td>724</td>\n",
              "      <td>724</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4388161847</th>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4445114986</th>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4558609924</th>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "      <td>736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4702921684</th>\n",
              "      <td>731</td>\n",
              "      <td>731</td>\n",
              "      <td>731</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5553957443</th>\n",
              "      <td>730</td>\n",
              "      <td>730</td>\n",
              "      <td>730</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5577150313</th>\n",
              "      <td>708</td>\n",
              "      <td>708</td>\n",
              "      <td>708</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6117666160</th>\n",
              "      <td>660</td>\n",
              "      <td>660</td>\n",
              "      <td>660</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6290855005</th>\n",
              "      <td>665</td>\n",
              "      <td>665</td>\n",
              "      <td>665</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6775888955</th>\n",
              "      <td>610</td>\n",
              "      <td>610</td>\n",
              "      <td>610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6962181067</th>\n",
              "      <td>732</td>\n",
              "      <td>732</td>\n",
              "      <td>732</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7007744171</th>\n",
              "      <td>601</td>\n",
              "      <td>601</td>\n",
              "      <td>601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7086361926</th>\n",
              "      <td>733</td>\n",
              "      <td>733</td>\n",
              "      <td>733</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8053475328</th>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8253242879</th>\n",
              "      <td>431</td>\n",
              "      <td>431</td>\n",
              "      <td>431</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8378563200</th>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8583815059</th>\n",
              "      <td>718</td>\n",
              "      <td>718</td>\n",
              "      <td>718</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8792009665</th>\n",
              "      <td>672</td>\n",
              "      <td>672</td>\n",
              "      <td>672</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8877689391</th>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "      <td>735</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            calories  intensities  steps\n",
              "1503960366       717          717    717\n",
              "1624580081       736          736    736\n",
              "1644430081       708          708    708\n",
              "1844505072       731          731    731\n",
              "1927972279       736          736    736\n",
              "2022484408       736          736    736\n",
              "2026352035       736          736    736\n",
              "2320127002       735          735    735\n",
              "2347167796       414          414    414\n",
              "2873212765       736          736    736\n",
              "3372868164       472          472    472\n",
              "3977333714       696          696    696\n",
              "4020332650       732          732    732\n",
              "4057192912        88           88     88\n",
              "4319703577       724          724    724\n",
              "4388161847       735          735    735\n",
              "4445114986       735          735    735\n",
              "4558609924       736          736    736\n",
              "4702921684       731          731    731\n",
              "5553957443       730          730    730\n",
              "5577150313       708          708    708\n",
              "6117666160       660          660    660\n",
              "6290855005       665          665    665\n",
              "6775888955       610          610    610\n",
              "6962181067       732          732    732\n",
              "7007744171       601          601    601\n",
              "7086361926       733          733    733\n",
              "8053475328       735          735    735\n",
              "8253242879       431          431    431\n",
              "8378563200       735          735    735\n",
              "8583815059       718          718    718\n",
              "8792009665       672          672    672\n",
              "8877689391       735          735    735"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SCT8RPtQaUdp"
      },
      "source": [
        "We can see that the `Id` columns are identical across the three datasets and can safely assume that the `ActivityHour` columns are also same"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "lZEiA2s9TjSj",
        "outputId": "b764b2a2-7fa4-4193-fcbe-5432465c601b"
      },
      "source": [
        "# joining the hourly datasets\n",
        "\n",
        "hourly = pd.concat([hourly_calories, hourly_intensities], axis = 1)\n",
        "hourly_activity = pd.concat([hourly, hourly_steps], axis = 1)\n",
        "hourly_activity.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>Calories</th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>TotalIntensity</th>\n",
              "      <th>AverageIntensity</th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>StepTotal</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>81</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>20</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 1:00:00 AM</td>\n",
              "      <td>61</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 1:00:00 AM</td>\n",
              "      <td>8</td>\n",
              "      <td>0.133333</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 1:00:00 AM</td>\n",
              "      <td>160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:00:00 AM</td>\n",
              "      <td>59</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:00:00 AM</td>\n",
              "      <td>7</td>\n",
              "      <td>0.116667</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:00:00 AM</td>\n",
              "      <td>151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 3:00:00 AM</td>\n",
              "      <td>47</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 3:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 3:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 4:00:00 AM</td>\n",
              "      <td>48</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 4:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 4:00:00 AM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  ...           ActivityHour  StepTotal\n",
              "0  1503960366  4/12/2016 12:00:00 AM  ...  4/12/2016 12:00:00 AM        373\n",
              "1  1503960366   4/12/2016 1:00:00 AM  ...   4/12/2016 1:00:00 AM        160\n",
              "2  1503960366   4/12/2016 2:00:00 AM  ...   4/12/2016 2:00:00 AM        151\n",
              "3  1503960366   4/12/2016 3:00:00 AM  ...   4/12/2016 3:00:00 AM          0\n",
              "4  1503960366   4/12/2016 4:00:00 AM  ...   4/12/2016 4:00:00 AM          0\n",
              "\n",
              "[5 rows x 10 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6drTqZlaWjAX",
        "outputId": "1ffaf762-d3d3-4e79-d8e5-07327b4c742d"
      },
      "source": [
        "# drop the duplicate columns like id and activityhour columns\n",
        "hourly_activity = hourly_activity.T.drop_duplicates().T\n",
        "exploration(hourly_activity)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(22099, 6) \n",
            "\n",
            "Id                  object\n",
            "ActivityHour        object\n",
            "Calories            object\n",
            "TotalIntensity      object\n",
            "AverageIntensity    object\n",
            "StepTotal           object\n",
            "dtype: object \n",
            "\n",
            "Id                  0\n",
            "ActivityHour        0\n",
            "Calories            0\n",
            "TotalIntensity      0\n",
            "AverageIntensity    0\n",
            "StepTotal           0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "_Fpi0JkleIsl",
        "outputId": "5917a261-e005-40cc-c97c-700fd116927c"
      },
      "source": [
        "# view the new hourly df\n",
        "hourly_activity.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityHour</th>\n",
              "      <th>Calories</th>\n",
              "      <th>TotalIntensity</th>\n",
              "      <th>AverageIntensity</th>\n",
              "      <th>StepTotal</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 12:00:00 AM</td>\n",
              "      <td>81</td>\n",
              "      <td>20</td>\n",
              "      <td>0.333333</td>\n",
              "      <td>373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 1:00:00 AM</td>\n",
              "      <td>61</td>\n",
              "      <td>8</td>\n",
              "      <td>0.133333</td>\n",
              "      <td>160</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 2:00:00 AM</td>\n",
              "      <td>59</td>\n",
              "      <td>7</td>\n",
              "      <td>0.116667</td>\n",
              "      <td>151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 3:00:00 AM</td>\n",
              "      <td>47</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>4/12/2016 4:00:00 AM</td>\n",
              "      <td>48</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id           ActivityHour  ... AverageIntensity StepTotal\n",
              "0  1503960366  4/12/2016 12:00:00 AM  ...         0.333333       373\n",
              "1  1503960366   4/12/2016 1:00:00 AM  ...         0.133333       160\n",
              "2  1503960366   4/12/2016 2:00:00 AM  ...         0.116667       151\n",
              "3  1503960366   4/12/2016 3:00:00 AM  ...                0         0\n",
              "4  1503960366   4/12/2016 4:00:00 AM  ...                0         0\n",
              "\n",
              "[5 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "deNEfI6OiaMD"
      },
      "source": [
        "We can see that the the newly merged `hourly_activity` dataframe has 22099 rows and 6 columns. I will change the datatype of the `ActivityHour` column to datetime, `Id` column to integer dtype and the other columns to float datatype"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "puGQ08pEgx9u",
        "outputId": "6aa10f2b-8fcf-4a8a-b939-ca7a2660c501"
      },
      "source": [
        "# changing the datatype\n",
        "hourly_activity['ActivityHour'] = hourly_activity['ActivityHour'].astype('datetime64[ns]')\n",
        "hourly_activity[['Calories', 'TotalIntensity', 'AverageIntensity', 'StepTotal']] = hourly_activity[['Calories', 'TotalIntensity', 'AverageIntensity', 'StepTotal']].astype('float')\n",
        "hourly_activity['Id'] = hourly_activity['Id'].astype('int')\n",
        "# verifying the conversion\n",
        "hourly_activity.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Id                           int64\n",
              "ActivityHour        datetime64[ns]\n",
              "Calories                   float64\n",
              "TotalIntensity             float64\n",
              "AverageIntensity           float64\n",
              "StepTotal                  float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NXVk9zpdHs19"
      },
      "source": [
        "\n",
        "\n",
        "###**2.3 Further Data processing of the Daily Activity Dataset**\n",
        "The following data manipulation will be done:\n",
        "*  Convert the `ActivityDate` column to yyyy-mm-dd format\n",
        "\n",
        "*  Rearrange the columns\n",
        "\n",
        "*  Create new column `WeekDay` by separating the above ActivityDate into day name of the week\n",
        "\n",
        "*  Create new column `TotalMins` being the sum of `VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes and SedentaryMinutes`\n",
        "\n",
        "*  Create new column `TotalHours` by converting new `TotalMins` column to hours\n",
        "\n",
        "*  Create new column `WearDeviceAllDay` being a boolean column that indicates people that wore the FitBit device for 24 hours"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2NtrUekZoA54",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0bca7991-0cd0-4adc-a8ed-cac9b1ad2670"
      },
      "source": [
        "# converting the ActivityDate column to yyyy-mm-dd format\n",
        "daily_activity[\"ActivityDate\"] = pd.to_datetime(daily_activity[\"ActivityDate\"], format =  \"%m/%d/%Y\")\n",
        "\n",
        "\n",
        "# preview the ActivityDate column to confirm the format\n",
        "daily_activity[\"ActivityDate\"].head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0   2016-04-12\n",
              "1   2016-04-13\n",
              "2   2016-04-14\n",
              "3   2016-04-15\n",
              "4   2016-04-16\n",
              "Name: ActivityDate, dtype: datetime64[ns]"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "Chri1iaNLyi8",
        "outputId": "f613555c-610f-4ff1-a959-5752778452a5"
      },
      "source": [
        "# create new list of rearranged columns\n",
        "new_cols = ['Id', 'ActivityDate', 'WeekDay', 'TotalSteps', 'TotalDistance', 'TrackerDistance', 'LoggedActivitiesDistance', 'VeryActiveDistance', 'ModeratelyActiveDistance', 'LightActiveDistance',\n",
        "            'SedentaryActiveDistance', 'VeryActiveMinutes', 'FairlyActiveMinutes', 'LightlyActiveMinutes', 'SedentaryMinutes', 'TotalMins', 'TotalHours', 'Calories']\n",
        "\n",
        "# rearrange the columns based on the new list of columns\n",
        "daily_activity = daily_activity.reindex(columns=new_cols)\n",
        "\n",
        "# preview the dataframe\n",
        "daily_activity.head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityDate</th>\n",
              "      <th>WeekDay</th>\n",
              "      <th>TotalSteps</th>\n",
              "      <th>TotalDistance</th>\n",
              "      <th>TrackerDistance</th>\n",
              "      <th>LoggedActivitiesDistance</th>\n",
              "      <th>VeryActiveDistance</th>\n",
              "      <th>ModeratelyActiveDistance</th>\n",
              "      <th>LightActiveDistance</th>\n",
              "      <th>SedentaryActiveDistance</th>\n",
              "      <th>VeryActiveMinutes</th>\n",
              "      <th>FairlyActiveMinutes</th>\n",
              "      <th>LightlyActiveMinutes</th>\n",
              "      <th>SedentaryMinutes</th>\n",
              "      <th>TotalMins</th>\n",
              "      <th>TotalHours</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-12</td>\n",
              "      <td>NaN</td>\n",
              "      <td>13162</td>\n",
              "      <td>8.50</td>\n",
              "      <td>8.50</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.88</td>\n",
              "      <td>0.55</td>\n",
              "      <td>6.06</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25</td>\n",
              "      <td>13</td>\n",
              "      <td>328</td>\n",
              "      <td>728</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1985</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-13</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10735</td>\n",
              "      <td>6.97</td>\n",
              "      <td>6.97</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.57</td>\n",
              "      <td>0.69</td>\n",
              "      <td>4.71</td>\n",
              "      <td>0.0</td>\n",
              "      <td>21</td>\n",
              "      <td>19</td>\n",
              "      <td>217</td>\n",
              "      <td>776</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-14</td>\n",
              "      <td>NaN</td>\n",
              "      <td>10460</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.74</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.44</td>\n",
              "      <td>0.40</td>\n",
              "      <td>3.91</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30</td>\n",
              "      <td>11</td>\n",
              "      <td>181</td>\n",
              "      <td>1218</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9762</td>\n",
              "      <td>6.28</td>\n",
              "      <td>6.28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.14</td>\n",
              "      <td>1.26</td>\n",
              "      <td>2.83</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29</td>\n",
              "      <td>34</td>\n",
              "      <td>209</td>\n",
              "      <td>726</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1745</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-16</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12669</td>\n",
              "      <td>8.16</td>\n",
              "      <td>8.16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.71</td>\n",
              "      <td>0.41</td>\n",
              "      <td>5.04</td>\n",
              "      <td>0.0</td>\n",
              "      <td>36</td>\n",
              "      <td>10</td>\n",
              "      <td>221</td>\n",
              "      <td>773</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1863</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id ActivityDate  WeekDay  ...  TotalMins  TotalHours  Calories\n",
              "0  1503960366   2016-04-12      NaN  ...        NaN         NaN      1985\n",
              "1  1503960366   2016-04-13      NaN  ...        NaN         NaN      1797\n",
              "2  1503960366   2016-04-14      NaN  ...        NaN         NaN      1776\n",
              "3  1503960366   2016-04-15      NaN  ...        NaN         NaN      1745\n",
              "4  1503960366   2016-04-16      NaN  ...        NaN         NaN      1863\n",
              "\n",
              "[5 rows x 18 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hxBeE8ZKMuGe",
        "outputId": "4986d4e0-df3e-41fe-91d2-e50b691b43a9"
      },
      "source": [
        "# Create new column WeekDay by separating the above ActivityDate into day name of the week\n",
        "daily_activity[\"WeekDay\"] = daily_activity[\"ActivityDate\"].dt.day_name()\n",
        "\n",
        "# print 1st 5 rows to confirm\n",
        "daily_activity[\"WeekDay\"].head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      Tuesday\n",
              "1    Wednesday\n",
              "2     Thursday\n",
              "3       Friday\n",
              "4     Saturday\n",
              "Name: WeekDay, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "httpzzfwNep0",
        "outputId": "c937ac0c-8b00-490f-ba72-de78a9ad8677"
      },
      "source": [
        "# Create new column TotalMins\n",
        "daily_activity[\"TotalMins\"] = daily_activity[\"VeryActiveMinutes\"] + daily_activity[\"FairlyActiveMinutes\"] + daily_activity[\"LightlyActiveMinutes\"] + daily_activity[\"SedentaryMinutes\"]\n",
        "\n",
        "\n",
        "# Create new column TotalHours\n",
        "daily_activity[\"TotalHours\"] = round(daily_activity[\"TotalMins\"] / 60)\n",
        "\n",
        "# preview\n",
        "daily_activity[['TotalMins', 'TotalHours']].head()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TotalMins</th>\n",
              "      <th>TotalHours</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1094</td>\n",
              "      <td>18.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1033</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1440</td>\n",
              "      <td>24.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>998</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1040</td>\n",
              "      <td>17.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   TotalMins  TotalHours\n",
              "0       1094        18.0\n",
              "1       1033        17.0\n",
              "2       1440        24.0\n",
              "3        998        17.0\n",
              "4       1040        17.0"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T0Dn6OtPOxuj",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8530c1d9-c4d4-4909-82ad-d7414f2af6d1"
      },
      "source": [
        "# Create new column WearDeviceAllDay\n",
        "daily_activity['WearDeviceAllDay'] = daily_activity['TotalHours'] == 24.0\n",
        "\n",
        "#preview\n",
        "daily_activity['WearDeviceAllDay'].head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    False\n",
              "1    False\n",
              "2     True\n",
              "3    False\n",
              "4    False\n",
              "Name: WearDeviceAllDay, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "id": "iBfnwW9gpX_Y",
        "outputId": "76dc6795-0ccf-46fe-b37a-b74bf365bc86"
      },
      "source": [
        "# preview the daily activity dataset after data cleaning\n",
        "\n",
        "daily_activity.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>ActivityDate</th>\n",
              "      <th>WeekDay</th>\n",
              "      <th>TotalSteps</th>\n",
              "      <th>TotalDistance</th>\n",
              "      <th>TrackerDistance</th>\n",
              "      <th>LoggedActivitiesDistance</th>\n",
              "      <th>VeryActiveDistance</th>\n",
              "      <th>ModeratelyActiveDistance</th>\n",
              "      <th>LightActiveDistance</th>\n",
              "      <th>SedentaryActiveDistance</th>\n",
              "      <th>VeryActiveMinutes</th>\n",
              "      <th>FairlyActiveMinutes</th>\n",
              "      <th>LightlyActiveMinutes</th>\n",
              "      <th>SedentaryMinutes</th>\n",
              "      <th>TotalMins</th>\n",
              "      <th>TotalHours</th>\n",
              "      <th>Calories</th>\n",
              "      <th>WearDeviceAllDay</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-12</td>\n",
              "      <td>Tuesday</td>\n",
              "      <td>13162</td>\n",
              "      <td>8.50</td>\n",
              "      <td>8.50</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.88</td>\n",
              "      <td>0.55</td>\n",
              "      <td>6.06</td>\n",
              "      <td>0.0</td>\n",
              "      <td>25</td>\n",
              "      <td>13</td>\n",
              "      <td>328</td>\n",
              "      <td>728</td>\n",
              "      <td>1094</td>\n",
              "      <td>18.0</td>\n",
              "      <td>1985</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-13</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>10735</td>\n",
              "      <td>6.97</td>\n",
              "      <td>6.97</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.57</td>\n",
              "      <td>0.69</td>\n",
              "      <td>4.71</td>\n",
              "      <td>0.0</td>\n",
              "      <td>21</td>\n",
              "      <td>19</td>\n",
              "      <td>217</td>\n",
              "      <td>776</td>\n",
              "      <td>1033</td>\n",
              "      <td>17.0</td>\n",
              "      <td>1797</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-14</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>10460</td>\n",
              "      <td>6.74</td>\n",
              "      <td>6.74</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.44</td>\n",
              "      <td>0.40</td>\n",
              "      <td>3.91</td>\n",
              "      <td>0.0</td>\n",
              "      <td>30</td>\n",
              "      <td>11</td>\n",
              "      <td>181</td>\n",
              "      <td>1218</td>\n",
              "      <td>1440</td>\n",
              "      <td>24.0</td>\n",
              "      <td>1776</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-15</td>\n",
              "      <td>Friday</td>\n",
              "      <td>9762</td>\n",
              "      <td>6.28</td>\n",
              "      <td>6.28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.14</td>\n",
              "      <td>1.26</td>\n",
              "      <td>2.83</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29</td>\n",
              "      <td>34</td>\n",
              "      <td>209</td>\n",
              "      <td>726</td>\n",
              "      <td>998</td>\n",
              "      <td>17.0</td>\n",
              "      <td>1745</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1503960366</td>\n",
              "      <td>2016-04-16</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>12669</td>\n",
              "      <td>8.16</td>\n",
              "      <td>8.16</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.71</td>\n",
              "      <td>0.41</td>\n",
              "      <td>5.04</td>\n",
              "      <td>0.0</td>\n",
              "      <td>36</td>\n",
              "      <td>10</td>\n",
              "      <td>221</td>\n",
              "      <td>773</td>\n",
              "      <td>1040</td>\n",
              "      <td>17.0</td>\n",
              "      <td>1863</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Id ActivityDate    WeekDay  ...  TotalHours  Calories  WearDeviceAllDay\n",
              "0  1503960366   2016-04-12    Tuesday  ...        18.0      1985             False\n",
              "1  1503960366   2016-04-13  Wednesday  ...        17.0      1797             False\n",
              "2  1503960366   2016-04-14   Thursday  ...        24.0      1776              True\n",
              "3  1503960366   2016-04-15     Friday  ...        17.0      1745             False\n",
              "4  1503960366   2016-04-16   Saturday  ...        17.0      1863             False\n",
              "\n",
              "[5 rows x 19 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TQqyVD55pzG3"
      },
      "source": [
        "All data cleaning and processing is complete. Onto the next step : Analyze the dataset\n",
        "###**3. Data Analysis and Visualization**\n",
        "####**3.1 Analysis and Visualization of the Daily Activity Dataset**\n",
        "####**3.1.1 Summary statistics of the dataset**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "id": "5FkWSIbTE0DZ",
        "outputId": "de38815d-d576-486b-b11a-6d5e1c119405"
      },
      "source": [
        "daily_activity.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>TotalSteps</th>\n",
              "      <th>TotalDistance</th>\n",
              "      <th>TrackerDistance</th>\n",
              "      <th>LoggedActivitiesDistance</th>\n",
              "      <th>VeryActiveDistance</th>\n",
              "      <th>ModeratelyActiveDistance</th>\n",
              "      <th>LightActiveDistance</th>\n",
              "      <th>SedentaryActiveDistance</th>\n",
              "      <th>VeryActiveMinutes</th>\n",
              "      <th>FairlyActiveMinutes</th>\n",
              "      <th>LightlyActiveMinutes</th>\n",
              "      <th>SedentaryMinutes</th>\n",
              "      <th>TotalMins</th>\n",
              "      <th>TotalHours</th>\n",
              "      <th>Calories</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9.400000e+02</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "      <td>940.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>4.855407e+09</td>\n",
              "      <td>7637.910638</td>\n",
              "      <td>5.489702</td>\n",
              "      <td>5.475351</td>\n",
              "      <td>0.108171</td>\n",
              "      <td>1.502681</td>\n",
              "      <td>0.567543</td>\n",
              "      <td>3.340819</td>\n",
              "      <td>0.001606</td>\n",
              "      <td>21.164894</td>\n",
              "      <td>13.564894</td>\n",
              "      <td>192.812766</td>\n",
              "      <td>991.210638</td>\n",
              "      <td>1218.753191</td>\n",
              "      <td>20.313830</td>\n",
              "      <td>2303.609574</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.424805e+09</td>\n",
              "      <td>5087.150742</td>\n",
              "      <td>3.924606</td>\n",
              "      <td>3.907276</td>\n",
              "      <td>0.619897</td>\n",
              "      <td>2.658941</td>\n",
              "      <td>0.883580</td>\n",
              "      <td>2.040655</td>\n",
              "      <td>0.007346</td>\n",
              "      <td>32.844803</td>\n",
              "      <td>19.987404</td>\n",
              "      <td>109.174700</td>\n",
              "      <td>301.267437</td>\n",
              "      <td>265.931767</td>\n",
              "      <td>4.437283</td>\n",
              "      <td>718.166862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.503960e+09</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.320127e+09</td>\n",
              "      <td>3789.750000</td>\n",
              "      <td>2.620000</td>\n",
              "      <td>2.620000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.945000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>127.000000</td>\n",
              "      <td>729.750000</td>\n",
              "      <td>989.750000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>1828.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.445115e+09</td>\n",
              "      <td>7405.500000</td>\n",
              "      <td>5.245000</td>\n",
              "      <td>5.245000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.210000</td>\n",
              "      <td>0.240000</td>\n",
              "      <td>3.365000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>199.000000</td>\n",
              "      <td>1057.500000</td>\n",
              "      <td>1440.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>2134.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.962181e+09</td>\n",
              "      <td>10727.000000</td>\n",
              "      <td>7.712500</td>\n",
              "      <td>7.710000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.052500</td>\n",
              "      <td>0.800000</td>\n",
              "      <td>4.782500</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>264.000000</td>\n",
              "      <td>1229.500000</td>\n",
              "      <td>1440.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>2793.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>8.877689e+09</td>\n",
              "      <td>36019.000000</td>\n",
              "      <td>28.030001</td>\n",
              "      <td>28.030001</td>\n",
              "      <td>4.942142</td>\n",
              "      <td>21.920000</td>\n",
              "      <td>6.480000</td>\n",
              "      <td>10.710000</td>\n",
              "      <td>0.110000</td>\n",
              "      <td>210.000000</td>\n",
              "      <td>143.000000</td>\n",
              "      <td>518.000000</td>\n",
              "      <td>1440.000000</td>\n",
              "      <td>1440.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>4900.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 Id    TotalSteps  ...  TotalHours     Calories\n",
              "count  9.400000e+02    940.000000  ...  940.000000   940.000000\n",
              "mean   4.855407e+09   7637.910638  ...   20.313830  2303.609574\n",
              "std    2.424805e+09   5087.150742  ...    4.437283   718.166862\n",
              "min    1.503960e+09      0.000000  ...    0.000000     0.000000\n",
              "25%    2.320127e+09   3789.750000  ...   16.000000  1828.500000\n",
              "50%    4.445115e+09   7405.500000  ...   24.000000  2134.000000\n",
              "75%    6.962181e+09  10727.000000  ...   24.000000  2793.250000\n",
              "max    8.877689e+09  36019.000000  ...   24.000000  4900.000000\n",
              "\n",
              "[8 rows x 16 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bKpoZzt2FY9f"
      },
      "source": [
        "From the summary statistics above, the following observations can be made:\n",
        "*  On average, the users logged about 7,637 steps and total distance of 5.48 km\n",
        "*  Users tracked their activities using the device on average of 20.3 hours\n",
        "* Users logged mostly sedentary minutes with an average of 991.21 than other ActiveMinute categories"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hAtpADQnE2W6"
      },
      "source": [
        "####**3.1.2 Do users wear FitBit device all day?**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 558
        },
        "id": "_6R09Y2OsNmo",
        "outputId": "984c641c-3adc-4d7d-8418-f6b4f57fafda"
      },
      "source": [
        "plt.style.use(\"fivethirtyeight\")\n",
        "plt.figure(figsize=(10, 8)) \n",
        "daily_activity['WearDeviceAllDay'].value_counts().plot.bar(rot = 360, color = ('blue', 'red'))\n",
        "\n",
        "plt.xlabel(\"Was the FitBit device worn all day ?\")\n",
        "plt.ylabel(\"Count\")\n",
        "plt.title(\"No. of times users wore the FitBit device all day\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x576 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0P3U9p0h0Vkm",
        "outputId": "220b8018-bee7-4183-d143-74052b120b1b"
      },
      "source": [
        "daily_activity['WearDeviceAllDay'].value_counts(normalize = True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True     0.512766\n",
              "False    0.487234\n",
              "Name: WearDeviceAllDay, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W9jZmg-308g2"
      },
      "source": [
        "We can see that users wore or used the device all day only 51% of the time\n",
        "\n",
        "####**3.1.3 How did users log into the device or use theFitBit device across the weekdays?**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 558
        },
        "id": "4-tTc_yRpvdC",
        "outputId": "e373fb79-2699-4b19-df2c-1a57904b136e"
      },
      "source": [
        "plt.style.use(\"fivethirtyeight\")\n",
        "plt.figure(figsize=(10, 8)) \n",
        "order = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n",
        "sns.countplot(x = 'WeekDay', data = daily_activity, order = order)\n",
        "\n",
        "plt.xlabel(\"Day of the Week\")\n",
        "plt.ylabel(\"Count\")\n",
        "plt.title(\"No. of times users used the device across the week\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x576 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "efwDHC7yrJyu",
        "outputId": "b6176013-aeb4-4ecd-92c2-23a5b4622cfd"
      },
      "source": [
        "daily_activity['WeekDay'].value_counts(normalize = True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Tuesday      0.161702\n",
              "Wednesday    0.159574\n",
              "Thursday     0.156383\n",
              "Friday       0.134043\n",
              "Saturday     0.131915\n",
              "Sunday       0.128723\n",
              "Monday       0.127660\n",
              "Name: WeekDay, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ShUXBGFM4Yse"
      },
      "source": [
        "We can see that users tracked their activities mostly on Tuesday, Wednesday and Thursday. This trend decreased on Friday through to Monday.\n",
        "\n",
        "####**3.1.4 Is there a relationship between calories burned and total steps?**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 767
        },
        "id": "3xM0HD5f3jD4",
        "outputId": "cd577021-4e26-4bde-cfaa-9bb084c47eb8"
      },
      "source": [
        "plt.style.use(\"fivethirtyeight\")\n",
        "plt.figure(figsize=(10, 8))\n",
        "plt.scatter(daily_activity['TotalSteps'], daily_activity['Calories'], c = daily_activity['Calories'], cmap = plt.cm.seismic)\n",
        "\n",
        "plt.colorbar(orientation = \"vertical\")\n",
        "plt.xlabel(\"Steps taken\")\n",
        "plt.ylabel(\"Calories burned\")\n",
        "plt.title(\"Calories burned for every step taken\")\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "n9ihQ1Nj83fq"
      },
      "source": [
        "There is a positive correlation or relationship between calories burned and steps taken. However, the following are noted:\n",
        "*  Zero steps with zero to minimal calories burned.\n",
        "*  One observation of < 3,000 calories burned with > 35,000 steps : this is an outlier\n",
        "* Majority of the calories burned increased within the range of > 0 up until 15000 steps, at which point the calories burned started to decrease"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uSro1OUW_tPQ"
      },
      "source": [
        "####**3.1.5 What is the percentage of activity in minutes?**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "Lm1Fx42p57Bg",
        "outputId": "52e35716-5ddd-4f32-a49f-a038667539de"
      },
      "source": [
        "very_active_mins = daily_activity[\"VeryActiveMinutes\"].sum()\n",
        "fairly_active_mins = daily_activity[\"FairlyActiveMinutes\"].sum()\n",
        "lightly_active_mins = daily_activity[\"LightlyActiveMinutes\"].sum()\n",
        "sedentary_mins = daily_activity[\"SedentaryMinutes\"].sum()\n",
        "\n",
        "# plotting pie chart\n",
        "slices = [very_active_mins, fairly_active_mins, lightly_active_mins, sedentary_mins]\n",
        "labels = [\"Very active minutes\", \"Fairly active minutes\", \"Lightly active minutes\", \"Sedentary minutes\"]\n",
        "cmap = plt.cm.coolwarm\n",
        "colors = cmap(np.linspace(0., 1., len(slices)))\n",
        "explode = [0, 0, 0, 0.1]\n",
        "plt.style.use(\"fivethirtyeight\")\n",
        "plt.pie(slices, labels = labels, colors = colors, explode = explode, autopct = \"%1.1f%%\") \n",
        "plt.title(\"Percentage of Activity in Minutes\")\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RDIHt-xcWL65"
      },
      "source": [
        "As seen from the pie chart, `Sedentary minutes` takes the biggest slice at `81.3%`.\n",
        "\n",
        "This indicates that users are using the FitBit app to log daily activities such as daily commute, inactive movements (ie. moving from one spot to another) or running errands.\n",
        "\n",
        "App is rarely being used to track fitness (ie. running) as seen from the minor percentage of `fairly active activity (1.1%) and very active activity (1.7%)`. Even as the FitBit app was developed to encourage fitness, this is highly discouraging ."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TSSzgy6EHt7m"
      },
      "source": [
        "####**3.1.6 What is the percentage of activity in distance?**\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 434
        },
        "id": "ZVVBnw9iH1Y5",
        "outputId": "bdde649b-de54-446d-880e-926578000cb5"
      },
      "source": [
        "very_active_dist = daily_activity[\"VeryActiveDistance\"].sum()\n",
        "moderately_active_dist = daily_activity[\"ModeratelyActiveDistance\"].sum()\n",
        "light_active_dist = daily_activity[\"LightActiveDistance\"].sum()\n",
        "sedentary_dist = daily_activity[\"SedentaryActiveDistance\"].sum()\n",
        "\n",
        "# plotting pie chart\n",
        "slices = [very_active_dist, moderately_active_dist, light_active_dist, sedentary_dist]\n",
        "labels = [\"Very active distance\", \"Moderately active distance\", \"Light active distance\", \"Sedentary active distance\"]\n",
        "cmap = plt.cm.coolwarm\n",
        "colors = cmap(np.linspace(0., 1., len(slices)))\n",
        "explode = [0, 0, 0, 0.1]\n",
        "plt.style.use(\"fivethirtyeight\")\n",
        "plt.pie(slices, labels = labels, colors = colors, explode = explode, autopct = \"%.2f%%\") \n",
        "plt.title(\"Percentage of Activity in Distance\")\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "m82kCNBUYmN4"
      },
      "source": [
        "As seen from the pie chart, `Light active distance` takes the biggest slice at `61.72%`.\n",
        "\n",
        "This correlates with the percentage of `Sedentary miuntes` on the previous pie chart - indicating that users are using the FitBit app to log daily activities such as daily commute, inactive movements (ie. moving from one spot to another) or running errands.\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jPKPuh51MUS8"
      },
      "source": [
        "###**3.2 Analysis and Visualization of the Hourly Activity Dataset**\n",
        "####**3.2.1 Summary statistics of the dataset**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "vQ0HfB4aI3of",
        "outputId": "9d8d39fd-74e0-44db-f770-f294c1b96318"
      },
      "source": [
        "hourly_activity.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>Calories</th>\n",
              "      <th>TotalIntensity</th>\n",
              "      <th>AverageIntensity</th>\n",
              "      <th>StepTotal</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>2.209900e+04</td>\n",
              "      <td>22099.000000</td>\n",
              "      <td>22099.000000</td>\n",
              "      <td>22099.000000</td>\n",
              "      <td>22099.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>4.848235e+09</td>\n",
              "      <td>97.386760</td>\n",
              "      <td>12.035341</td>\n",
              "      <td>0.200589</td>\n",
              "      <td>320.166342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.422500e+09</td>\n",
              "      <td>60.702622</td>\n",
              "      <td>21.133110</td>\n",
              "      <td>0.352219</td>\n",
              "      <td>690.384228</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.503960e+09</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.320127e+09</td>\n",
              "      <td>63.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.445115e+09</td>\n",
              "      <td>83.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.050000</td>\n",
              "      <td>40.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>6.962181e+09</td>\n",
              "      <td>108.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>0.266667</td>\n",
              "      <td>357.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>8.877689e+09</td>\n",
              "      <td>948.000000</td>\n",
              "      <td>180.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>10554.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 Id      Calories  ...  AverageIntensity     StepTotal\n",
              "count  2.209900e+04  22099.000000  ...      22099.000000  22099.000000\n",
              "mean   4.848235e+09     97.386760  ...          0.200589    320.166342\n",
              "std    2.422500e+09     60.702622  ...          0.352219    690.384228\n",
              "min    1.503960e+09     42.000000  ...          0.000000      0.000000\n",
              "25%    2.320127e+09     63.000000  ...          0.000000      0.000000\n",
              "50%    4.445115e+09     83.000000  ...          0.050000     40.000000\n",
              "75%    6.962181e+09    108.000000  ...          0.266667    357.000000\n",
              "max    8.877689e+09    948.000000  ...          3.000000  10554.000000\n",
              "\n",
              "[8 rows x 5 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 144
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6ijaOutQMySA"
      },
      "source": [
        "From summary statistics of the hourly activity dataset, the following can be observed:\n",
        "*  On hourly average, users burned calories of about 97.38 and took average total steps of 320.16\n",
        "\n",
        "####**3.2.2 Is there a relationship between calories burned and total steps?**\n",
        "\n",
        "Now, lets see the correlation or relationship between calories burned and steps taken variables in the hourly activity dataset\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 767
        },
        "id": "-SfhinGjJooD",
        "outputId": "b23a5f8f-41ef-4b84-d783-0e1654cf9180"
      },
      "source": [
        "plt.style.use(\"fivethirtyeight\")\n",
        "plt.figure(figsize=(10, 8))\n",
        "plt.scatter(hourly_activity['StepTotal'], hourly_activity['Calories'], c = hourly_activity['Calories'], cmap = plt.cm.coolwarm)\n",
        "\n",
        "plt.colorbar(orientation = \"vertical\")\n",
        "plt.xlabel(\"Steps taken\")\n",
        "plt.ylabel(\"Calories burned\")\n",
        "plt.title(\"Calories burned for every step taken\")\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "r0KnMZImdTDo"
      },
      "source": [
        "There is a positive correlation or relationship between calories burned and steps taken in the hourly activity dataset. However, the following are noted:\n",
        "\n",
        "* Zero steps with zero to minimal calories burned.\n",
        "* One observation of > 800 calories burned with > 10,000 steps : this is an outlier\n",
        "* Few observations of > 600 calories burned with > 8,000 steps "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H5Kr_IbUhXS0"
      },
      "source": [
        "###**4. Conclusion**\n",
        "The following insights were drawn from this case study analysis:\n",
        "* Majority of users - 81.3% are using the FitBit app to track sedentary activities and not using it to track their fitness.\n",
        "\n",
        "* Users prefer to track their activities during weekdays as compared to weekends.\n",
        "\n",
        "* Approximately 51% of the respondents in the survey wore their FitBit device all day ie. for 24 hours."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "G_MJxZfhkMiM"
      },
      "source": [
        "###**5. Recommendations for Bellabeat Marketing Strategy**\n",
        "\n",
        "* Bellabeat's marketing team can encourage users on the app by educating and equipping them with knowledge on the importance of fitness, suggest different kinds of exercise, number of steps taken, distance walked, calories intake and burnt rate information on the Bellabeat app. This will encourage users to use the fitness tracker for active activities like exercise.\n",
        "* The Bellabeat Leaf is well situated a market segment: people who don't wear devices 24/7. The Bellabeat Leaf product is two-in-one: fitness and jewelry in one device. So, targeted advertisements with a clear message would be useful here.\n",
        "* Prompt notifications from the Bellabeat app mostly on weekends to encourage users to exercise."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h3LRQtvNM-9R"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
